<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IPython Books</title><link>http://ipython-books.github.io/</link><description></description><atom:link href="http://ipython-books.github.io/feeds/rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 14 Oct 2014 00:00:00 +0200</lastBuildDate><item><title>Featured recipes</title><link>http://ipython-books.github.io/featured-recipes/</link><description>&lt;p&gt;The &lt;a href="/cookbook/"&gt;IPython Cookbook&lt;/a&gt; contains more than &lt;a href="/cookbook/#part-i-advanced-high-performance-interactive-computing"&gt;100 recipes on numerical computing and data science with Python&lt;/a&gt;. The integrality of the code is &lt;a href="https://github.com/ipython-books/cookbook-code"&gt;freely available on GitHub&lt;/a&gt;. In addition, I have released several &lt;strong&gt;featured recipes&lt;/strong&gt; so far. These recipes contain not only the code, but also the full recipe description, the explanations, and all references. They cover a wide range of the topics covered in the book. I intend to release more featured recipes in the future.&lt;/p&gt;


&lt;p&gt;Here are the six featured recipes available today:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-01/"&gt;&lt;strong&gt;Getting the best performance out of NumPy&lt;/strong&gt;&lt;/a&gt;. This recipe elaborates on a blog post I had written a while ago. It gives a few tricks that can make your NumPy code much more efficient. I also explain a few implementation details of NumPy that you need to know in order to get the best performance out of your code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="NumPy array layout." src="http://ipython-books.github.io/images/layout.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-02/"&gt;&lt;strong&gt;Simulating a physical system by minimizing an energy&lt;/strong&gt;&lt;/a&gt;. This recipe illustrates how to use SciPy's optimization routines to simulate a physical system.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://ipython-books.github.io/images/optim.png" alt="NumPy array layout." width="300" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-03/"&gt;&lt;strong&gt;Creating a route planner for road network&lt;/strong&gt;&lt;/a&gt;. This recipe implements a GPS-like itinerary planner in pure Python! It uses the &lt;a href="http://networkx.github.io"&gt;NetworkX package&lt;/a&gt; to compute a shortest path in a road network. The example uses an open dataset with the full road network of California.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A GPS in Python!" src="http://ipython-books.github.io/images/road.jpg" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-04/"&gt;&lt;strong&gt;Introduction to machine learning in Python with scikit-learn&lt;/strong&gt;&lt;/a&gt;. This recipe illustrates the most fundamental concepts of machine learning with scikit-learn. This is the recipe for you if you're just getting started with machine learning, and you want to understand the meaning of supervised and unsupervised learning, classification, regression, clustering, feature selection, feature extraction, overfitting, regularization, and cross-validation. This recipe illustrates some of these concepts on a simple curve fitting problem, using least squares and ridge regression.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://ipython-books.github.io/images/ml.png" alt="Introduction to scikit-learn" width="600" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-05/"&gt;&lt;strong&gt;Simulating a partial differential equation (PDE): reaction-diffusion systems and Turing patterns&lt;/strong&gt;&lt;/a&gt;. This recipe shows how to simulate a PDE in Python and NumPy, using the finite difference method.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://ipython-books.github.io/images/turing.jpg" alt="Turing patterns in Python" width="400" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/featured-06/"&gt;&lt;strong&gt;Getting started with Vispy&lt;/strong&gt;&lt;/a&gt;. This recipe illustrates the fundamental concepts of OpenGL for big data visualization using &lt;a href="http://vispy.org"&gt;Vispy&lt;/a&gt;, a Python library I've been working on for nearly two years.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vispy examples" src="http://ipython-books.github.io/images/vispy.jpg" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'm planning to release more featured recipes in the near future. Let me know in the comments if there's one recipe in particular you'd like to see among &lt;a href="/cookbook/#part-i-advanced-high-performance-interactive-computing"&gt;all of the cookbook's recipes&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cyrille Rossant</dc:creator><pubDate>Tue, 14 Oct 2014 00:00:00 +0200</pubDate><guid>tag:ipython-books.github.io,2014-10-14:featured-recipes/</guid><category>cookbook</category></item><item><title>prettyplotlib is no longer being developed</title><link>http://ipython-books.github.io/prettyplotlib-no-longer-being-developed/</link><description>&lt;p&gt;&lt;a href="https://github.com/ipython-books/cookbook-code/issues/12"&gt;Github issue #12&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;prettyplotlib is covered in &lt;a href="http://nbviewer.ipython.org/github/ipython-books/cookbook-code/blob/master/notebooks/chapter06_viz/01_prettyplotlib.ipynb"&gt;recipe 6.1&lt;/a&gt;. However, &lt;a href="http://www.olgabotvinnik.com/"&gt;Olga Botvinnik&lt;/a&gt; (&lt;a href="https://github.com/olgabot"&gt;@olgabot&lt;/a&gt;) &lt;a href="http://blog.olgabotvinnik.com/blog/2014/10/06/no-longer-actively-developing-prettyplotlib/"&gt;is no longer actively developing this library&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;If you are interested in similar features for improving matplotlib's styling, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="http://matplotlib.org/users/style_sheets.html"&gt;matplotlib stylesheets&lt;/a&gt;, new in matplotlib 1.4&lt;/li&gt;
&lt;li&gt;Use &lt;a href="http://web.stanford.edu/~mwaskom/software/seaborn/"&gt;seaborn&lt;/a&gt;, actively maintained by &lt;a href="http://stanford.edu/~mwaskom/"&gt;Michael Waskom&lt;/a&gt; (&lt;a href="https://github.com/mwaskom"&gt;@mwaskom&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cyrille Rossant</dc:creator><pubDate>Sat, 11 Oct 2014 00:00:00 +0200</pubDate><guid>tag:ipython-books.github.io,2014-10-11:prettyplotlib-no-longer-being-developed/</guid><category>cookbook</category></item><item><title>New Microsoft C++ compiler for Python 2.7 on Windows</title><link>http://ipython-books.github.io/windows-compiler/</link><description>&lt;p&gt;Compiling C extensions for Python on Windows used to be complicated. One had to install the adequate (unsupported) versions of Microsoft Visual Studio and the Windows compilers. Furthemore, it was necessary to invoke some commands on the command-line interface before running Python or IPython. In the end, installing non-pure-Python packages, or building non-pure-Python distributions for Windows users was a pain.&lt;/p&gt;
&lt;p&gt;Microsoft is now trying to simplify this task by releasing a compiler package specifically targetting Python 2.7. This means that it should be much easier to compile C extensions for Python 2.7 on Windows now.&lt;/p&gt;


&lt;p&gt;You will find an &lt;a href="http://code.activestate.com/lists/python-dev/132763/"&gt;unofficial announcement by Microsoft here&lt;/a&gt;, and the &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=44266"&gt;compiler package here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The instructions to compile C extensions on Windows that you'll find in the IPython minibook and cookbook should still be valid, but they're likely to be soon superseded by simpler instructions based on this new compiler package.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cyrille Rossant</dc:creator><pubDate>Mon, 29 Sep 2014 00:00:00 +0200</pubDate><guid>tag:ipython-books.github.io,2014-09-29:windows-compiler/</guid><category>cookbook</category><category>minibook</category></item><item><title>IPython Cookbook released</title><link>http://ipython-books.github.io/ipython-cookbook-released/</link><description>&lt;p&gt;My new book, &lt;a href="/cookbook/"&gt;IPython Interactive Computing and Visualization Cookbook&lt;/a&gt;, has just been released! A sequel to my previous &lt;a href="http://ipython.rossant.net"&gt;beginner-level book on Python for data analysis&lt;/a&gt;, this new 500-page book is a &lt;strong&gt;complete advanced-level guide to Python for data science&lt;/strong&gt;. The 100+ recipes cover not only interactive and high-performance computing topics, but also data science methods in statistics, data mining, machine learning, signal processing, image processing, network analysis, and mathematical modeling.&lt;/p&gt;


&lt;p&gt;Here is a glimpse of the topics addressed in this book: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IPython notebook, &lt;strong&gt;interactive widgets&lt;/strong&gt; in IPython 2+&lt;/li&gt;
&lt;li&gt;Best practices in interactive computing: version control, workflows with IPython, testing, debugging, continuous integration...&lt;/li&gt;
&lt;li&gt;Data analysis with pandas, NumPy/SciPy, and matplotlib&lt;/li&gt;
&lt;li&gt;Advanced data visualization with &lt;strong&gt;seaborn, Bokeh, mpld3, d3.js, Vispy&lt;/strong&gt;...&lt;/li&gt;
&lt;li&gt;Code profiling and optimization&lt;/li&gt;
&lt;li&gt;High-performance computing with &lt;strong&gt;Numba, Cython, GPGPU with CUDA/OpenCL, MPI, HDF5, Julia&lt;/strong&gt;...&lt;/li&gt;
&lt;li&gt;Statistical data analysis with &lt;strong&gt;SciPy, PyMC, R&lt;/strong&gt;...&lt;/li&gt;
&lt;li&gt;Machine learning with &lt;strong&gt;scikit-learn&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Signal processing with SciPy, image processing with &lt;strong&gt;scikit-image&lt;/strong&gt; and OpenCV&lt;/li&gt;
&lt;li&gt;Analysis of graphs and social networks with &lt;strong&gt;NetworkX&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Geographic Information Systems in Python&lt;/li&gt;
&lt;li&gt;Mathematical modeling: dynamical systems, symbolic mathematics with &lt;strong&gt;SymPy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the code is freely available as IPython notebooks on the &lt;a href="https://github.com/ipython-books/cookbook-code"&gt;book's GitHub repository&lt;/a&gt;. This repository is also the place where you can signal errata or propose improvements to any part of the book.&lt;/p&gt;
&lt;p&gt;The book uses Python 3, although most of the code will work fine on Python 2.&lt;/p&gt;
&lt;p&gt;You'll find the book on &lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/ipython-interactive-computing-and-visualization-cookbook"&gt;Packt's website&lt;/a&gt;, &lt;a href="http://www.amazon.com/IPython-Interactive-Computing-Visualization-Cookbook/dp/1783284811/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1410688253&amp;amp;sr=1-1"&gt;Amazon&lt;/a&gt;, and many other bookstores.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cyrille Rossant</dc:creator><pubDate>Fri, 26 Sep 2014 00:00:00 +0200</pubDate><guid>tag:ipython-books.github.io,2014-09-26:ipython-cookbook-released/</guid><category>cookbook</category></item><item><title>IPython Minibook released</title><link>http://ipython-books.github.io/ipython-minibook-released/</link><description>&lt;p&gt;I'm glad to present my new book, &lt;a href="/minibook/"&gt;Learning IPython for Interactive Computing and Data Visualization&lt;/a&gt;, Packt
Publishing.&lt;/p&gt;
&lt;p&gt;This book is a &lt;strong&gt;beginner-level introduction to IPython&lt;/strong&gt; for
interactive Python programming, high-performance numerical computing,
and data visualization. It assumes nothing more than familiarity with
Python. It targets developers, students, teachers, hobbyists who know
Python a bit, and who want to learn IPython for the extended console,
the Notebook, and for more advanced scientific applications.&lt;/p&gt;


&lt;p&gt;The book first introduces IPython for interactive Python and shell
programming. It shows how IPython can considerably improve the
productivity of a developer who creates, debugs, benchmarks and profiles
Python code.&lt;/p&gt;
&lt;p&gt;Then, the reader learns the very basics of vector computing, and
discovers how to load and analyze numerical and tabular data with NumPy
and Pandas. The book shows the interactive visualization capabilities of
the platform with Matplotlib, SciPy and PIL. It also contains a few
image processing examples.&lt;/p&gt;
&lt;p&gt;Some techniques to accelerate Python code are also demonstrated, using
either interactive parallel computing features from IPython (using MPI
or not), or Cython to compile a portion of the code in C for really
interesting speedups.&lt;/p&gt;
&lt;p&gt;Finally, the book shows how IPython can be customized for advanced uses,
notably with the creation of new extensions and magic commands.&lt;/p&gt;
&lt;p&gt;The code is stored in a &lt;a href="https://github.com/rossant/ipython-minibook"&gt;GitHub
repository&lt;/a&gt;. It contains
IPython notebooks with most examples from the book.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cyrille Rossant</dc:creator><pubDate>Sat, 27 Apr 2013 00:00:00 +0200</pubDate><guid>tag:ipython-books.github.io,2013-04-27:ipython-minibook-released/</guid><category>minibook</category></item></channel></rss>